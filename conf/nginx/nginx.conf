user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
	
	server_tokens off;
	sendfile on;
	
	gzip              on;
	gzip_http_version 1.0;
	gzip_proxied      any;
	gzip_min_length   500;
	gzip_disable      "MSIE [1-6]\.";
	gzip_types        text/plain text/xml text/css text/comma-separated-values text/javascript image/png application/x-javascript application/atom+xml;
	gunzip            on;
	
	# List of application servers
	upstream app_servers {
		
		server tomcat:8080;
		
	}
	
	# Configuration for the server
	server {
		
		listen 80 default_server;
		listen [::]:80 default_server ipv6only=on;
		
		# Googleverse
		location /generate_204 {
			return 204;
		}
		
		location /gen_204 {
			return 204;
		}
		
		# Appleverse
		location /hotspot-detect.html {
			return 200 '<html><head><title>Success</title></head><body>Success</body></html>';
			add_header Content-Type text/html;
		}
		
		location /library/test/success.html {
			return 200 '<html><head><title>Success</title></head><body>Success</body></html>';
			add_header Content-Type text/html;
		}
		
		# MSverse
		location /ncsi.txt {
			return 200 'Microsoft NCSI';
		}
		
		# Firefoxverse
		location /success.txt {
			return 200 'success';
		}
	}
	
	
	# Configuration for the server
	server {
		
		gzip              on;
		gzip_proxied      any;
		gzip_min_length   500;
		gzip_types        text/plain text/xml text/css text/comma-separated-values text/javascript image/png application/x-javascript application/atom+xml;
		gunzip            on;
		
		listen 443;
		index  index.html index.htm;
		
		# Proxying the connections connections
		location / {
			
			gzip_static on;
			
			if ($request_method = 'OPTIONS') {
				add_header "Access-Control-Allow-Origin" $http_origin;
				add_header "Vary" "Origin";
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,Range,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Acopenept-Ranges,Content-Encoding,Content-Range,Content-Length';
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			
			if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,Range,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Acopenept-Ranges,Content-Encoding,Content-Range,Content-Length';
				add_header 'Access-Control-Expose-Headers' 'Accept-Ranges,Content-Encoding,Content-Length,Content-Range,Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma,Date';
			}
			
			if ($request_method = 'GET') {
				add_header "Access-Control-Allow-Origin" $http_origin;
				add_header "Vary" "Origin";
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,Range,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Acopenept-Ranges,Content-Encoding, Content-Range, Content-Length';
				add_header 'Access-Control-Expose-Headers' 'Accept-Ranges,Content-Encoding,Content-Length,Content-Range,Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma,Date';
			}
			include  /etc/nginx/mime.types;
			alias /usr/local/nginx/webapp;
			index   index.html;
		}
		
		# redirect server error pages to the static page
		#
		error_page 401 403 404      /404.html;
		location = /404.html {
			root   /usr/local/nginx/errors;
		}
		
		error_page 500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/local/nginx/errors;
		}
		
	}
	
}
